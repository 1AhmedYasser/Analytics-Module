getKey:
  call: http.post
  args:
    url: http://resql:8082/get-odp-settings
  result: settings
  
authenticate:
  call: http.post
  args:
    url: https://avaandmed.eesti.ee/api/auth/key-login
    headers:
      X-API-KEY: ${settings.response.body[0].odpKey}
  result: apiToken

createDataset:
  call: http.post
  args:
    url: https://avaandmed.eesti.ee/api/users/me/datasets # replace with organization url that contains org id
    body:
      nameEt: ${incoming.body.nameEt}
      nameEn: ${incoming.body.nameEn}
      descriptionEt: ${incoming.body.descriptionEt}
      descriptionEn: ${incoming.body.descriptionEn}
      maintainer: ${incoming.body.maintainer}
      maintainerEmail: ${incoming.body.maintainerEmail}
      regionIds: ${incoming.body.regionIds}
      keywordIds: ${incoming.body.keywordIds}
      categoryIds: ${incoming.body.categoryIds}
      updateIntervalUnit: ${incoming.body.updateIntervalUnit}
      updateIntervalFrequency: ${incoming.body.updateIntervalFrequency}
      dataFrom: ${incoming.body.dataFrom}
      access: ${incoming.body.access}
      licenceId: ${incoming.body.licenceId}
    headers:
      Authorization: ${'Bearer ' + apiToken.response.body.data.accessToken}
  result: datasetCreation

setUpSchedule:
  call: http.post
  args:
    url: http://resql:8082/add-scheduled-report
    body:
      name: ${incoming.body.nameEt}
      period: ${incoming.body.updateIntervalUnit}
      metrics: ${incoming.body.metrics}
      cron_expression: ${incoming.body.cron_expression}
      dataset_id: ${datasetCreation.response.body.data.id}
  result: added
  next: return_post_schedule

uploadImmediately:
  call: http.post
  args:
    url: http://ruuter:8080/odp/upload
    body:
      metrics: ${incoming.body.metrics}
      start: ${incoming.body.start}
      end: ${incoming.body.end}
      period: ${incoming.body.updateIntervalUnit}
      datasetId: ${datasetCreation.response.body.data.id}
  result: uploadResult

return_post_upload:
  return: ${uploadResult.response.body}
  next: end

return_post_schedule:
  return: ${added.response.body}
  next: end

  
