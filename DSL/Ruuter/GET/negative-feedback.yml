check_for_token:
  switch:
    - condition: ${incoming.headers.token == null || incoming.headers.token == ""}
      next: return_unauthorized
  next: extract_request_data
    
extract_request_data:
  assign:
    token: ${incoming.headers.token}

extract_token_data:
  call: http.post
  args:
    url: http://ruuter:8080/mocks/mock-custom-jwt-userinfo # todo: replace with real TIM url
    headers:
      token: ${token}
    body:
      cookieName: "customJwtCookie" # todo: replace with real TIM cookie's name
  result: jwtResult

validate_role:
  switch:
    - condition: ${jwtResult.response.body.response.authorities.includes("ROLE_ANALYST")}
      next: get_negative_feedback
  next: return_unauthorized

get_negative_feedback:
  call: http.post
  args:
    url: http://resql:8082/negative-feedback
  result: feedback

return_value:
  return: ${feedback.response.body}
  next: end
  
return_unauthorized:
  status: 401
  return: "unauthorized"
